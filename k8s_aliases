alias ks='source ~/.k8senv/k8s_aliases'
alias kks='python ~/.k8senv/genenv.py > /tmp/k8senv; . /tmp/k8senv'
alias k='vim ~/.k8senv/k8s_aliases; ks'
alias hg='history | grep -i'
alias ag='alias | grep -i'

alias ports='sudo lsof -Pnl +M -i -cmd | grep -E "LISTEN|TCP|UDP"'

alias dimg='sudo docker image ls'
alias dls='dimg'
alias dimgg='dimg | grep'
alias dimgves='dimg | grep ves'
alias dimgdb='dimg | grep dashboard'

function dimgrmall() {
	sudo docker image rm $1
	ssh -t kwo1 "sudo docker image rm $1"
	ssh -t kwo2 "sudo docker image rm $1"
}


alias kk='kubectl'
alias kkclusterinfo='kk custer-info'
alias kkgetservice='kk get service'
alias kkgetpods='kk get pod -o wide'
alias kkgp='kkgetpods'
alias kkgpinit='kkgp | grep -i Init'
alias kkinit='kkgpinit'
alias kkgpterm='kkgp | grep -i Term'
alias kkterm='kkgpterm'
alias kkgperror='kkgp | grep -i error'
alias kkerror='kkgperror'
alias kkerr='kkgperror'
alias kkgpdb='kkgp | grep -i dashboard'
alias kkdb='kkgpdb'
alias kkgpves='kkgp | grep -i ves'
alias kkves='kkgpves'
alias kkgpcc='kkgp | grep -i conn| grep -i consum'
alias kkcc='kkgpcc'
alias kkredis='kkgp | grep redis'
alias kkomc='kkgp | grep omconsumer'
alias kkomp='kkgp | grep omproducer'
alias kkorg='kkgp | grep reportgenerator'
alias kkrg='kkorg'
alias kkgetpodyaml='kk get pod -o yaml'
alias kkdescribepod='kk describe pod'
alias kkdp='kkdescribepod'
alias kksaml='kkdp | grep saml'
alias kkdescribeservice='kk describe service'
alias kkgetnode='kk get node'
alias kkdescribenode='kk describe node'
alias kksysgetpod='kk -n kube-system get pod -o wide'
alias kksysdescribepod='kk -n kube-system describe pod'

alias kkapiversions='kk api-versions'
alias kkgetproxyconfigmap='kk get -n kube-system configmap kube-proxy -o yaml'
alias kkdescribeproxy='kk describe -n kube-system pod kube-proxy'
alias kkdelete='kubectl delete -f'
alias kkdeletedb='kkdelete dashboard.yaml'
alias kkdeldb='kkdeletedb'
alias kkapply='kubectl apply -f'
alias kkapplydb='kkapply dashboard.yaml'

alias kkdbshell=''


alias tailtopic='kubectl exec --stdin --tty kafka-0 -- /opt/bitnami/kafka/bin/kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic'
alias tailom='tailtopic OM'
alias tailevent='tailtopic EVENT'
alias tailves='tailtopic VES'
alias tailconnection='tailtopic CONNECTION'

alias listtopics='kubectl exec --stdin --tty kafka-0 -- /opt/bitnami/kafka/bin/kafka-topics.sh --list --zookeeper kafka-zookeeper'
alias kklisttopics='listtopics'
alias kklisttopics='listtopics'
alias gentopicdata='kubectl exec --stdin --tty kafka-0 -- /opt/bitnami/kafka/bin/kafka-console-producer.sh --bootstrap-server kafka:9092 --topic'
alias kkgentopicdata='gentopicdata'

alias kkbash='echo "kubectl exec -it \$1 -- /bin/bash" > /tmp/kkbash.sh; . /tmp/kkbash.sh'

alias dockerload='sudo docker load -i'

alias cptar2kwo='echo "echo kwo1 ; scp \$1 kwo1:~/dev/ ; echo kwo2; scp \$1 kwo2:~/dev/" > /tmp/cptar2kwo.sh; . /tmp/cptar2kwo.sh'
alias loadtarkwo='echo "echo kwo1 ; ssh -t kwo1 ""sudo docker load -i ~/dev/\$1"" ; echo kwo2 ; ssh -t kwo2 ""sudo docker load -i ~/dev/\$1""" > /tmp/loadtarkwo.sh; . /tmp/loadtarkwo.sh'

alias vydb='vim dashboard.yaml'
alias kklogs='kk logs'
alias kklog='kklogs'

alias cdomc='dev; cd om_consumer'
alias cdomp='dev; cd omproducer'
alias cdrpg='dev; cd report_generator'
alias cdes='dev; cd event_service'
alias cdec='dev; cd event_consumer'
alias cddb='dev; cd dashboard'
alias cdcc='dev; cd connection_consumer'

alias kkforwardport='kubectl port-forward --address 0.0.0.0 $VMLC_DASHBOARD 80:8000'

alias kkdeleteallpods='kubectl delete --all pods --namespace=default'

function k8postinit() {
	cd /tcs/dlpdeployment/ansible/
	ansible-playbook -i inventory-vas-$1.ini k8postinit.yml
}

function kkcpdb {
	echo "kubectl cp $1 $VMLC_DASHBOARD:/$1"
	kubectl cp $1 $VMLC_DASHBOARD:/$1
}

function kkexecdb {
	echo kubectl exec $VMLC_DASHBOARD -- "$@"
	kubectl exec $VMLC_DASHBOARD -- "$@"
}

alias kkdbps='kkexecdb ps -agx'
alias kkdbimg='kkdpdb | grep -i image'

function kkdblog {
	kkexecdb tail -f /archive/log/dlp/dlp_rest_proxy.log
}

function kkdbvilog {
	if [ -f /tmp/dlp_rest_proxy.log ]; then
		rm /tmp/dlp_rest_proxy.log
	fi
	kubectl cp $VMLC_DASHBOARD:/archive/log/dlp/dlp_rest_proxy.log /tmp/dlp_rest_proxy.log
	vim /tmp/dlp_rest_proxy.log
}

function yaml2json() { 
        echo -e "import yaml,pprint;\nss=yaml.load_all(open(\"$1\").read(), Loader=yaml.FullLoader);\nfor s in ss: \n\tpprint.pprint(s)" > /tmp/y2j.py
        python3 /tmp/y2j.py
}
alias y2j='yaml2json'



DT=`date +%Y-%m-%dT%H%M%S`


function pushk8senv() {
        ssh -t $1 "if \[ ! -d ~/.k8senv \]; then mkdir ~/.k8senv; fi"
        scp -r ~/.k8senv/* $1:~/.k8senv/
}

alias k8spush=pushk8senv

function pullk8senv() {
        ssh -t $1 "ls -l ~/.k8senv/*"
        scp -r $1:~/.k8senv/* ~/.k8senv/
}

alias k8spull=pullk8senv

function ports() {
  lsof -Pnl +M -i -cmd | grep -E "LISTEN|TCP|UDP"
}

